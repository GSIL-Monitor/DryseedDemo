apply plugin: 'com.android.application'
apply plugin: 'com.antfortune.freeline'
apply plugin: 'org.greenrobot.greendao'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

def verCode = 1

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "com.dryseed.dryseedapp"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0"
        //RenderScript support 用于高斯模糊
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        multiDexEnabled true
        buildConfigField "String", "TENCENT_ID", "\"" + TENCENT_ID + "\""
        manifestPlaceholders = [TENCENT_ID_WITH_NAME: "tencent" + TENCENT_ID]

        // Specifies the ABI configurations of your native
        // libraries Gradle should build and package with your APK.
        ndk {
            //指定ndk需要兼容的架构，把除了v7a以外的兼容包都过滤掉，只剩下一个v7a的文件夹。
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
    }

    signingConfigs {
        release {
            //由于本地打包使用的是本机上的KeyStore,而Jenkins打包用的是服务器上的KeyStore,两个路径不一样
            if ("true".equals(IS_JENKINS)) {
                storeFile file("服务器上KeyStore的路径")
            } else {
                storeFile file(STORE_FILE_PATH)
            }
            storeFile file(STORE_FILE_PATH)
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storePassword STORE_FILE_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    useLibrary 'org.apache.http.legacy'

    productFlavors {
        baidu {
            manifestPlaceholders = [MTA_CHANNEL_VALUE: "baidu"]
        }
        xiaomi {
            manifestPlaceholders = [MTA_CHANNEL_VALUE: "xiaomi"]
        }
    }

    //修改生成的apk名字及输出文件夹
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            //新名字
            def newName
            //时间戳
            def timeNow
            //输出文件夹
            def outDirectory
            //是否为Jenkins打包，输出路径不同
            if ("true".equals(IS_JENKINS)) {
                //Jenkins打包输出到服务器路径
                timeNow = BUILD_TIME
                //BUILD_PATH为服务器输出路径
                outDirectory = BUILD_PATH
                //AutoBuildTest-v1.0.1-xiaomi-release.apk
                newName = 'AutoBuildTest-v' + APP_VERSION + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + '.apk'
            } else {
                //本机打包输出在本机路径
                timeNow = getDate()
                outDirectory = output.outputFile.getParent()
                if ('debug'.equals(variant.buildType.name)) {
                    //newName = "${APPNAME}-v${APP_VERSION}-debug-${timeNow}.apk"
                    newName = "${APPNAME}-v${APP_VERSION}-debug.apk"
                } else {
                    //AutoBuildTest-v1.0.1-xiaomi-release.apk
                    newName = APPNAME + '-' + APP_VERSION + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + '-' /*+ timeNow*/ + '.apk'
                }
            }
            output.outputFile = new File(outDirectory + '/'/* + timeNow*/, newName)
        }
    }
}



configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:25.3.1'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'

    //logger
    compile 'com.orhanobut:logger:1.3' //https://github.com/orhanobut/logger
    //gson
    compile 'com.google.code.gson:gson:2.7'
    //fastjson
    compile 'com.alibaba:fastjson:1.1.52.android'
    //leakcanary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'
    //fresco
    compile 'com.facebook.fresco:fresco:0.6.0'
    //multidex
    compile 'com.android.support:multidex:1.0.1'
    //rxjava2.0
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //retrofit
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    //gson converter
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    //RxJava2 Adapter
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    //okhttp
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    //glide
    compile 'com.github.bumptech.glide:glide:4.2.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.4.0'
    //lottie https://github.com/airbnb/lottie-android
    compile 'com.airbnb.android:lottie:1.0.1'
    //weixin camera
    compile project(path: ':camera')
    //badge https://github.com/qstumn/BadgeView
    compile 'q.rorbin:badgeview:1.1.3'
    //pictureselector https://github.com/LuckSiege/PictureSelector
    compile project(path: ':pictureselector')
    //greendao https://github.com/greenrobot/greenDAO
    compile 'org.greenrobot:greendao:3.2.2'
    //stetho https://github.com/facebook/stetho
    compile 'com.facebook.stetho:stetho:1.5.0'
}
