apply plugin: 'com.dd.comgradle'
apply plugin: 'org.greenrobot.greendao'
//TimeCost linked{project/build.gradle classpath "com.dryseed.timecost.gradle:buildsrc:1.+"}
if ("timecost_enable".prop(project) == 'true') {
    apply plugin: 'com.dryseed.timecost.gradle.dsplugin'
}

apply from: "${project.rootDir}/taskTimeCost.gradle"

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

def verCode = 1
repositories {
    //在libs目录下能找到aar文件
    flatDir {
        dirs 'libs' //this way we can find the .aar file in libs folder
    }
}

android {
    compileSdkVersion Integer.parseInt("${COMPILE_SDK_VERSION}")
    buildToolsVersion "${BUILD_TOOLS_VERSION}"

    defaultConfig {
        applicationId "com.dryseed.dryseedapp"
        minSdkVersion Integer.parseInt("${MIN_SDK_VERSION}")
        targetSdkVersion Integer.parseInt("${TARGET_SDK_VERSION}")
        versionCode 1
        versionName "1.0.0"
        //RenderScript support 用于高斯模糊
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        multiDexEnabled true
        buildConfigField "String", "TENCENT_ID", "\"" + TENCENT_ID + "\""
        buildConfigField "boolean", "AUTO_UPDATES", "true"
        manifestPlaceholders = [TENCENT_ID_WITH_NAME: "tencent" + TENCENT_ID]
        //语言支持
        resConfigs 'zh', 'zh_CN', 'zh_HK', 'zh_MO', 'zh_TW', 'en'

        ndk {
            //由于arm平台的so在其他平台上面能够以兼容模式运行的，虽然会损失性能，但是可以极大地减少函数库占用的空间。
            //abiFilters "armeabi"
            abiFilters "armeabi-v7a", "x86"
        }

        //ARouter & Component Router
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName(), host: "app"]
            }
        }

        testInstrumentationRunner "com.dryseed.dryseedapp.MyJunitRunner"
    }

    signingConfigs {
        release {
            //由于本地打包使用的是本机上的KeyStore,而Jenkins打包用的是服务器上的KeyStore,两个路径不一样
            if ("true".equals(IS_JENKINS)) {
                storeFile file("服务器上KeyStore的路径")
            } else {
                storeFile file(STORE_FILE_PATH)
            }
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storePassword STORE_FILE_PASSWORD
        }
        debug {
            keyAlias 'ds'
            keyPassword '123456'
            storeFile file('ds.jks')
            storePassword '123456'
        }
    }

    buildTypes {
        release {
            minifyEnabled true   // 混淆
            zipAlignEnabled true // Zipalign优化
            shrinkResources true // 移除无用的resource
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false   // 混淆
            zipAlignEnabled false // Zipalign优化
            shrinkResources false // 移除无用的resource
            signingConfig signingConfigs.debug
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
            java.srcDirs = ['src/main/java', 'src/main/java-dao']
            res.srcDirs = ['src/main/res']
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    useLibrary 'org.apache.http.legacy'

    //fix error : All flavors must now belong to a named flavor dimension. Learn more at https://d.android.com/r/tools/flavorDimensions-missing-error-message.html
    flavorDimensions "default"

    productFlavors {
        dev {
            //优先级 buildTypes >  productFlavors > defaultConfig
            minSdkVersion Integer.parseInt("${DEV_MIN_SDK_VERSION}")
            manifestPlaceholders = [MTA_CHANNEL_VALUE: "dev"]
            buildConfigField "boolean", "AUTO_UPDATES", "false"
        }
        baidu {
            manifestPlaceholders = [MTA_CHANNEL_VALUE: "baidu"]
            buildConfigField "boolean", "AUTO_UPDATES", "true"
        }
        xiaomi {
            manifestPlaceholders = [MTA_CHANNEL_VALUE: "xiaomi"]
            //下面的代码会在BuildConfig类中生成AUTO_UPDATES布尔常量，默认值为true，在使用xiaomi flavor时，该值会被设置成true。
            buildConfigField "boolean", "AUTO_UPDATES", "true"
        }
    }

    dataBinding {
        enabled = true
    }

    //修改生成的apk名字及输出文件夹
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            //新名字
            def newName
            //时间戳
            def timeNow
            //输出文件夹
            def outDirectory
            //是否为Jenkins打包，输出路径不同
            if ("true".equals(IS_JENKINS)) {
                //Jenkins打包输出到服务器路径
                timeNow = BUILD_TIME
                //BUILD_PATH为服务器输出路径
                outDirectory = BUILD_PATH
                //AutoBuildTest-v1.0.1-xiaomi-release.apk
                newName = 'AutoBuildTest-v' + APP_VERSION + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + '.apk'
            } else {
                //本机打包输出在本机路径
                timeNow = getDate()
                outDirectory = output.outputFile.getParent()
                if ('debug'.equals(variant.buildType.name)) {
                    //newName = "${APPNAME}-v${APP_VERSION}-debug-${timeNow}.apk"
                    newName = "${APPNAME}-v${APP_VERSION}-debug.apk"
                } else {
                    //AutoBuildTest-v1.0.1-xiaomi-release.apk
                    newName = APPNAME + '-' + APP_VERSION + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + '-' /*+ timeNow*/ + '.apk'
                }
            }
            //output.outputFile = new File(outDirectory + '/'/* + timeNow*/, newName)
            //modify by gradle plugin 3.0+
            //outputFileName = newName // 修改apk名
        }
    }

    //跳过Lint和Test相关的task, 以加速编译
    gradle.taskGraph.whenReady {
        tasks.each { task ->
            if (task.name.contains("Test") || task.name.contains("Lint")) {
                //task.enabled = false
            }
        }
    }

    //开启增量编译
    compileOptions {
        incremental = true
    }

}

//greendao版本配置
greendao {
    targetGenDir 'src/main/java-dao'
    schemaVersion 40
    daoPackage 'greendao'
}
clean.doFirst {
    new File('app/src/main/java-dao/greendao').deleteDir()
}

//强制库的解析:这是解决冲突的另一种方式，不是声明一个配置，而是强制他用于所有配置。
configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:25.3.1'
}

//Component
combuild {
    applicationName = 'com.dryseed.dryseedapp.application.MyApplication'
    isRegisterCompoAuto = false
}

//TimeCost
if ("timecost_enable".prop(project) == 'true') {
    timeCostConfig {
        //this flag will decide whether the log of the time-cost plugin be printed or not, default value is true
        isDebug = true
        //this is a kit feature of the plugin, set it true to see the time consume of this build
        watchTaskTimeCost = false
        // the plugin will only inject package / class defined in whitePackageList
        whitePackageList = ['com.dryseed.dryseedapp', 'com.cjt2325']
        // thp plugin will not inject package, white list has a higher priority than white list
        blackPackageList = []
        // the plugin will inject automatically based on whitePackageList
        autoInject = true
        // this flag will decide whether the plugin will inject the jars, false by default
        jarInject = false
        scope {
            project true //inject app project, default true
            projectLocalDep false //inject app libs(eg: .jar), default false
            subProject true //inject subProject of app project(eg: module), default true
            subProjectLocalDep false //inject subProject libs, default false
            externalLibraries false //inject external libs(eg: .aar), default false
        }
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'

    implementation 'com.android.support:appcompat-v7:' + GOOGLE_SUPPORT_VERSION

    implementation 'com.android.support:design:' + GOOGLE_SUPPORT_VERSION

    implementation 'com.android.support:recyclerview-v7:' + GOOGLE_SUPPORT_VERSION

    // ----------------------------------------------------
    // ########## Component ##########
    // https://github.com/mqzhangw/JIMU
    // https://github.com/luojilab/DDComponentForAndroid
    // ----------------------------------------------------
    compile project(':componentservice')
    //annotationProcessor project(':router-anno-compiler')
    annotationProcessor 'com.luojilab.ddcomponent:router-anno-compiler:1.0.0'

    // ----------------------------------------------------
    // ########## Lifecycles ##########
    // https://developer.android.google.cn/topic/libraries/architecture/adding-components.html
    // 注意：'com.android.support:appcompat-v7:27.1.1'已经默认导入了lifecycles相关的库
    // ----------------------------------------------------
    implementation "android.arch.lifecycle:extensions:1.1.1" // ViewModel and LiveData
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"

    // ----------------------------------------------------
    // ########## WorkManager ##########
    // https://developer.android.com/topic/libraries/architecture/workmanager
    // Codelab : https://codelabs.developers.google.com/codelabs/android-workmanager/index.html
    // ----------------------------------------------------
    implementation "android.arch.work:work-runtime:" + ARCHITECTURE_COMPONENTS_VERSION

    // ----------------------------------------------------
    // ########## eventbus ##########
    // https://github.com/greenrobot/EventBus
    // ----------------------------------------------------
    implementation 'org.greenrobot:eventbus:3.1.1'

    // ----------------------------------------------------
    // ########## butterknife ##########
    // https://github.com/JakeWharton/butterknife
    // ----------------------------------------------------
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // ----------------------------------------------------
    // ########## gson ##########
    // https://github.com/google/gson
    // ----------------------------------------------------
    implementation 'com.google.code.gson:gson:2.7'

    // ----------------------------------------------------
    // ########## fastjson ##########
    // https://github.com/alibaba/fastjson
    // ----------------------------------------------------
    implementation 'com.alibaba:fastjson:1.1.52.android'

    // ----------------------------------------------------
    // ########## leakcanary ##########
    // https://github.com/square/leakcanary
    // ----------------------------------------------------
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'

    // ----------------------------------------------------
    // ########## fresco ##########
    // https://github.com/facebook/fresco
    // ----------------------------------------------------
    implementation 'com.facebook.fresco:fresco:' + FRESCO_VERSION
    // 支持 GIF 动图，需要添加
    implementation 'com.facebook.fresco:animated-gif:' + FRESCO_VERSION
    // 支持 WebP （静态图+动图），需要添加
    implementation 'com.facebook.fresco:animated-webp:' + FRESCO_VERSION
    implementation 'com.facebook.fresco:webpsupport:' + FRESCO_VERSION

    // ----------------------------------------------------
    // ########## rxjava2 ##########
    // https://github.com/ReactiveX/RxJava
    // https://github.com/ReactiveX/RxAndroid
    // ----------------------------------------------------
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // ----------------------------------------------------
    // ########## Retrofit ##########
    // https://github.com/square/retrofit
    // 依赖了okio(https://github.com/square/okio)、okhttp
    // ----------------------------------------------------
    implementation('com.squareup.retrofit2:retrofit:2.1.0') {
        exclude module: 'okhttp'
    }
    //retrofit gson converter
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'

    // ----------------------------------------------------
    // ########## Retrofit RxJava2 Adapter ##########
    // https://github.com/square/retrofit/tree/master/retrofit-adapters/rxjava2
    // 依赖了retrofit / rxjava2
    // ----------------------------------------------------
    implementation('com.squareup.retrofit2:adapter-rxjava2:2.3.0') {
        exclude group: 'com.squareup.retrofit2', module: 'retrofit'
        exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
    }

    // ----------------------------------------------------
    // ########## okhttp ##########
    // https://github.com/square/okhttp
    // ----------------------------------------------------
    implementation 'com.squareup.okhttp3:okhttp:3.4.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    // ----------------------------------------------------
    // ########## glide ##########
    // https://github.com/bumptech/glide
    // 依赖了support-v4
    // ----------------------------------------------------
    implementation('com.github.bumptech.glide:glide:4.2.0') {
        exclude group: "com.android.support"
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.2.0'
    //compile 'com.github.bumptech.glide:okhttp3-integration:4.2.0' //glide集成okhttp3

    // ----------------------------------------------------
    // ########## lottie ##########
    // https://github.com/airbnb/lottie-android
    // ----------------------------------------------------
    implementation 'com.airbnb.android:lottie:2.3.1'

    // ----------------------------------------------------
    // ########## BadgeView ##########
    // https://github.com/qstumn/BadgeView
    // ----------------------------------------------------
    implementation 'q.rorbin:badgeview:1.1.3'

    // ----------------------------------------------------
    // ########## pictureselector ##########
    // https://github.com/LuckSiege/PictureSelector
    // ----------------------------------------------------
    //compile project(path: ':pictureselector')

    // ----------------------------------------------------
    // ########## stetho ##########
    // https://github.com/facebook/stetho
    // ----------------------------------------------------
    implementation 'com.facebook.stetho:stetho:1.5.0'

    // ----------------------------------------------------
    // ########## wheelpicker ##########
    // https://gitee.com/li_yu_jiang/AndroidPicker (Demo:DatePickerActivity)
    // ----------------------------------------------------    
    //compile('cn.qqtheme.framework:WheelPicker:1.5.5') {
    //    exclude group: 'com.android.support'
    //}

    // ----------------------------------------------------
    // ########## RxDownload ##########
    // https://github.com/ssseasonnn/RxDownload
    // 依赖了com.squareup.retrofit2:retrofit:2.3.0/com.squareup.retrofit2:converter-gson:2.3.0/com.squareup.retrofit2:adapter-rxjava2:2.3.0/com.squareup.okhttp3:okhttp:3.9.0/com.squareup.okhttp3:logging-interceptor:3.9.0/io.reactivex.rxjava2:rxjava:2.1.0/io.reactivex.rxjava2:rxandroid:2.0.1
    // ----------------------------------------------------
    implementation('zlc.season:rxdownload3:1.2.0') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.squareup.retrofit2'
        exclude group: 'com.squareup.okhttp3'
        exclude group: 'io.reactivex.rxjava2'
    }

    // ----------------------------------------------------
    // ########## lineheightedittext ##########
    // https://github.com/hanks-zyh/LineHeightEditText
    // ----------------------------------------------------    
    //compile 'com.hanks:lineheightedittext-library:1.0'

    // ----------------------------------------------------
    // ########## 高德定位SDK ##########
    // http://lbs.amap.com/api/android-location-sdk/locationsummary/
    // ----------------------------------------------------
    implementation 'com.amap.api:location:3.8.0'

    // ----------------------------------------------------
    // ########## Zxing ##########
    // https://github.com/zxing/zxing
    // ----------------------------------------------------
    implementation 'com.google.zxing:core:3.3.2'

    //weixin camera
    implementation project(path: ':camera')

    // ----------------------------------------------------
    // ########## ARouter ##########
    // https://github.com/alibaba/ARouter
    // ----------------------------------------------------
    //compile 'com.alibaba:arouter-api:1.3.1'
    //annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'

    // ----------------------------------------------------
    // ########## PhotoView ##########
    // https://github.com/chrisbanes/PhotoView
    // ----------------------------------------------------
    implementation 'com.github.chrisbanes:PhotoView:2.0.0'

    //只有xiaomi渠道包才会引入依赖
    //xiaomiCompile 'com.qihoo360.union.sdk:union:1.0'

    // ----------------------------------------------------
    // ########## UltraViewPager ##########
    // https://github.com/alibaba/UltraViewPager
    // ----------------------------------------------------
    implementation 'com.alibaba.android:ultraviewpager:1.0.7.7'

    // ----------------------------------------------------
    // ########## TimeCost ##########
    // https://github.com/dryseedcai/TimeCost
    // ----------------------------------------------------
    if ("timecost_enable".prop(project) == 'true') {
        //implementation 'com.dryseed.timecost:timecostimp:1.+'
        implementation 'com.iqiyi.video:timecostimp:1.0.+'
    } else {
        //implementation 'com.dryseed.timecost:timecostimp-no-op:1.+'
        implementation 'com.iqiyi.video:timecostimp-no-op:1.0.+'
    }

}

